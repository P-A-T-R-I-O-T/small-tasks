import pandas as pd
import numpy as np

"""
Pandas часть 1. Домашнее Занание. Pro
Задача 1
Используя соответствующую функцию библиотеки Pandas, подгрузите датасет из файла 'train.csv'.
Выведите на экран первые 5 строк датафрейма (метод head).
В качестве индексов датафрейма укажите нулевой столбец.
"""
df = pd.read_csv('train.csv') # Загружаем базу
# print(df.head()) # Выводим на экран первые 5 строк
df.set_index(df.columns[0], inplace=True) # Функция `set_index()` используется для установки нового индекса для датафрейма.
# `df.columns[0]` обращается к первому столбцу датафрейма,
# и инструкция `inplace=True` указывает на то, что изменения должны быть внесены в исходный датафрейм `df`
# print(df.head())



"""
Задача 2
Для подгруженного из предыдущей задачи датасета выполните следующее:
посчитайте, сколько всего записей,
определите тип данных в каждом столбце,
проверьте, есть ли пропуски,
выведите на экран описательные статистики.
P.S. Используйте соответствующие встроенные методы.
"""

# print('всего записей: ', df.shape[0])
# print('тип данных в каждом столбце: ', df.dtypes)
# print('Показывает есть ли пропуски: ', df.isnull().sum())
# print('описательные статистика: ', df.describe())


"""
Задача 3
Используя соответствующий встроенный метод, дропните, т. е. удалите из нашей таблички все столбцы, у которых количество пропущенных значений больше 200.

Найдите все такие столбцы (метод .isna() + подвыборка с условием).
Определите их названия.
Дропните их (используйте метод .drop(имена столбцов)).
Результат сохраните в новой табличке data_1, исходную менять не нужно.
Могут быть полезны следующие параметры и методы:

columns - названия столбцов датафрейма
df[условие] - подвыборка элементов по условию
.drop - удаление строк или столбцов (в зависимости от параметра axis)
"""
columns_to_drop = df.columns[df.isna().sum() > 200]
# print(columns_to_drop)
data_1 = df.drop(columns=columns_to_drop, inplace=False)
# 1. `df.isna().sum()` - это метод `isna()` проверяет,
# где в датафрейме находятся пропущенные значения,
# а `sum()` суммирует количество пропущенных значений в каждом столбце.
# 2. `df.columns[df.isna().sum() > 200]` - это строка выбирает столбцы,
# у которых количество пропущенных значений больше 200,
# используя условие `df.isna().sum() > 200`.

# 3. `df.drop(columns=columns_to_drop, inplace=True)`
# - это метод `drop()` удаляет выбранные столбцы из датафрейма.
# Параметр `columns=columns_to_drop` указывает, какие столбцы нужно удалить,
# а `inplace=False` означает, что изменения происходят в новую переменну.
# print('Название столбцов: ', data_1.columns)





"""
Задача 4
Данные, с которыми мы работаем в этом домашнем задании, содержат информацию о проданных домах.
В датафрейме из прошлой задачи (data_1) найдите все дома, проданные в 2007 году,
у которых цена продажи выше 300000 и есть бассейн.
Для подвыборки с указанными условиями сначала создайте маску:

цена продажи SalePrice
год продажи YrSold
наличие бассейна можно определить по столбцу PoolArea
"""
print('Результат поиска по году продажи, цене и наличию бассейна:\n', data_1[(data_1['YrSold'] == 2007) & (data_1['SalePrice'] > 300000) & (data_1['PoolArea'] != 0)])







"""
Задача 5
Добавьте к табличке data_1 новый столбец с названием 'Flag'. Присвойте ему значения 0 или 1 в случайном порядке. Для этого

создайте одномерный массив из случайных целых чисел 0 или 1
размер массива должен соответствовать количеству наблюдений в датафрейме data_1
создайте новый столбец и присвойте ему значения одномерного массива
"""
data_1['Flag'] = np.random.randint(2, size=1460)
print(data_1['Flag'])