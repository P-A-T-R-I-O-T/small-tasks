def P(n): #(факторил)
  f =1
  for x in range(2,n+1):
    f*=x
  return f

# Сочетание
def C_n_m(n,m):
  return P(n)/ (P(n-m)* P(m))

# Размещение
def A_(n,m):
  return C_n_m(n,m) * P(m)

# Перестановка с повторением
def P_rep(n,m):
  add = 1
  for x in m:
    add*=P(x)
  return P(n)/ add

# Сочетание с повторением
def C_n_m_rep(n,m):
  return P(n+m-1)/ (P(n-1)* P(m))

# Размещение с повторением
def A_rep(n,m):
  return n**m


"""
Задача 1
У вас есть 5 шариков разных цветов в мешке. Сколько способов достать их из мешка?

Это перестановка без повторений, так как шарики разные
"""
n = 5
result_task1 = P(n)
print("Задача 1: Количество способов достать 5 шариков из мешка:", result_task1)



"""
Задача 2
На столе лежат пирожное, эклер, печенье и конфета. Сколько способов съесть 2 сладости (если порядок не важен)?

Это сочетание без повторений
"""
n = 4  # количество видов сладостей
m = 2  # количество сладостей, которые нужно съесть
result_task2 = C_n_m(n, m)
print("Задача 2: Количество способов съесть 2 сладости без учета порядка:", result_task2)



"""
Задача 3
На столе лежат пирожное, эклер, печенье и конфета. Сколько способов съесть 2 сладости (если порядок важен)?

Это размещение без повторений
"""
result_task3 = A_(n, m)
print("Задача 3: Количество способов съесть 2 сладости с учетом порядка:", result_task3)


"""
Задача 4
Создайте множество из названий сладостей (в виде строк) из задачи выше

"""
sweets = {"пирожное", "эклер", "печенье", "конфета"}
print("Задача 4: Множество названий сладостей:", sweets)
print(type(sweets))