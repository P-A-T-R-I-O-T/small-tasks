


# Задача 1

# Напишите функцию,
# которая принимает на вход строку и
# считает количество букв в верхнем и нижнем регистрах.
# Пример: 'На берегу Амазонки сидел Фернандо'. Что должно быть на выходе?
# Количество букв в верхнем регистре: 3
# Количество букв в нижнем регистре: 26


def count_uppercase_lowercase_letters(text):
    uppercase_count = sum(1 for c in text if c.isupper())
    lowercase_count = sum(1 for c in text if c.islower())
    return f"Количество букв в верхнем регистре: {uppercase_count}\n" + \
           f"Количество букв в нижнем регистре: {lowercase_count}"

print(count_uppercase_lowercase_letters('На берегу Амазонки сидел Фернандо'))



# Задача 2
#
# Напишите функцию,
# которая принимает на вход число и проверяет, если оно простое.
#
# Простые числа - это натуральные(целые положительные) числа,
# которые делятся только на себя или на единицу.
# Пример: 3 - это простое число, т. к. нацело 3 делится только на 3 и на 1.

def is_prime(n):
    if n <= 1:
        return False
    elif n <= 3:
        return True
    elif n % 2 == 0 or n % 3 == 0:
        return False
    i = 5
    while i * i <= n:
        if n % i == 0 or n % (i + 2) == 0:
            return False
        i += 6
    return True



print(is_prime(7))

# Задача 3
#
# Напишите функцию, которая проверяет, если число совершенное.
# Совершенным числом является положительное число,
# такое, что оно является суммой собственных положительных делителей
# (все, кроме самого числа).
# Пример: первым в числовом ряду совершенным числом является 6:
# 1+2+3=6 Найдите такие числа в промежутке,
# который вы будете вводить с клавиатуры (два числа: начало и конец промежутка),
# например, промежуток от 5 до 150.

def is_perfect(n):
    # Проверка, что число больше 1, так как единица не является совершенным числом
    if n < 1:
        return False
    # Сумма делителей числа
    sum = 1
    # Индекс для перебора делителей
    i = 2
    # Пока квадрат текущего делителя меньше или равен числу
    while i * i <= n:
        # Если число не делится на текущий делитель
        if n % i:
            # Переходим к следующему делителю
            i += 1
        # Если число делится на текущий делитель
        else:
            # Если квадрат делителя равен числу, то добавляем делитель и квадрат делителя к сумме
            if i * (n // i) == n:
                sum = sum + i + n//i
                # Переходим к следующему делителю
                i += 1
            # Если квадрат делителя не равен числу, то добавляем только делитель к сумме
            else:
                sum = sum + i
                # Уменьшаем число, пока оно делится на текущий делитель
                while n % i == 0:
                    n //= i
                # Переходим к следующему делителю
                i += 1
    # Возвращаем True, если сумма делителей равна числу, иначе False
    return sum == n


print(is_perfect(28))
# В этом коде функция `is_perfect(n)` проверяет,
# является ли число `n` совершенным числом.
# Совершенное число - это число,
# которое равно сумме своих собственных делителей (не считая само число).
# Например, число 6 является совершенным числом,
# так как 1, 2 и 3 - делители числа 6, и их сумма равна 6.
# Функция возвращает `True`, если число является совершенным,
# и `False` в противном случае.

# Задача 4
#
# Напишите функцию, которая проверяет, если фраза является палиндромом. Пример такой фразы:
# а роза упала на лапу Азора.


def is_palindrome(phrase):
    phrase = phrase.lower()  # сделаем все буквы строчными
    phrase = ''.join(e for e in phrase if e.isalnum())  # удалим все не алфавитно-цифровые символы
    return phrase == phrase[::-1]  # проверим, является ли фраза палиндромом

# тест
print(is_palindrome("а роза упала на лапу Азора"))  # True
print(is_palindrome("hello world"))  # False

# Задача 5
#
# Посчитать значение  cos2(π/7)  и  sin2(π/7) ,
# используя указанные функции из библиотеки math,
# применив для этого каждую из конструкций импорта:

# 1. Импорт модуля или модулей целиком
# import имя_модуля

# 2. Импорт модуля с присвоением псевдонима модулю
# import имя_модуля as новое_имя

# 3. Импорт конкретного объекта из модуля
# from имя_модуля import имя_объекта
# from имя_модуля import имя_объекта1, имя_объекта2

# 4. Импорт конкретного объекта из модуля с присвоением псевдонима объекту
# from имя_модуля import имя_объекта as псевдоним_объекта

# 5. Импорт всех объектов из модуля
# from имя_модуля import *

# Найдите сумму  cos2(π/7)  и  sin2(π/7) .

import math


def calculate_cos_sin():
    # Вычисляем cos(π/7) и sin(π/7)
    cos_value = math.cos(math.pi / 7)
    sin_value = math.sin(math.pi / 7)
    # Вычисляем cos^2(π/7) и sin^2(π/7)
    cos_squared = cos_value ** 2
    sin_squared = sin_value ** 2
    # Находим сумму cos^2(π/7) и sin^2(π/7)
    sum_value = cos_squared + sin_squared
    return cos_squared, sin_squared, sum_value


cos_squared, sin_squared, sum_value = calculate_cos_sin()
print("cos^2(π/7) =", cos_squared)
print("sin^2(π/7) =", sin_squared)
print("cos^2(π/7) + sin^2(π/7) =", sum_value)


# Этот код вычисляет значение cos2(π / 7) и sin2(π / 7),
# используя функции math.cos() и math.sin(),
# а затем находит их сумму. Результаты выводятся на экран.